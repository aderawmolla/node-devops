version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--ping=true"
      - "--log.level=ERROR"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.default.address=:80"
    networks:
      - my_overlay_network
    ports:
      - "${TRAEFIK_BIND_ADDRESS:-0.0.0.0}:${TRAEFIK_BIND_PORT:-80}:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefikapi.rule=PathPrefix(`/api/`) && HeadersRegexp(`Referer`, `^https?:\\/\\/[^/]+/traefik/dashboard/`)'
      - 'traefik.http.routers.traefikapi.entrypoints=default'
      - 'traefik.http.routers.traefikapi.service=api@internal'
      - 'traefik.http.routers.traefikapi.middlewares=traefik-auth'
      - 'traefik.http.routers.traefikdashboard.rule=PathPrefix(`/traefik/dashboard/`)'
      - 'traefik.http.routers.traefikdashboard.entrypoints=default'
      - 'traefik.http.routers.traefikdashboard.service=api@internal'
      - 'traefik.http.routers.traefikdashboard.middlewares=traefik-auth,traefik-stripprefix'
      - 'traefik.http.middlewares.traefik-stripprefix.stripprefix.prefixes=/traefik'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=admin:{SHA}0tTNr469Z7oY3fDRwNoUXE2vTBw='
    depends_on:
      opensearch:
        condition: service_healthy
    healthcheck:
      test: traefik healthcheck --ping
      start_period: 5s
      interval: 5s
      retries: 30
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  app:
    image: ad1740/node:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - /usr/src/app/node_modules
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - my_overlay_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/app`)"
      - "traefik.http.routers.app.entrypoints=default"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  fluentd:
    image: ad1740/fluentd:latest
    volumes:
      - ./fluentd/conf:/fluentd/etc  # Fluentd configuration directory
    ports:
      - "24224:24224"  # Fluentd input port
      - "5140:5140"    # Fluentd syslog port
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - my_overlay_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluentd.rule=PathPrefix(`/fluentd`)"
      - "traefik.http.routers.fluentd.entrypoints=default"
      - "traefik.http.services.fluentd.loadbalancer.server.port=24224"

  opensearch:
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"  # OpenSearch HTTP port
      - "9600:9600"  # OpenSearch performance analyzer port
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    deploy:
      replicas: 2  # Deploy 2 replicas of OpenSearch
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - my_overlay_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensearch.rule=PathPrefix(`/opensearch`)"
      - "traefik.http.routers.opensearch.entrypoints=default"
      - "traefik.http.services.opensearch.loadbalancer.server.port=9200"

volumes:
  opensearch_data:  # Named volume for OpenSearch data

networks:
  my_overlay_network:
    external: true  # Use the existing overlay network
